package dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;


import dto.Student_Dto;

public class Student_Dao {

	// try ~ catch						: 실행코드 내에 하나 이상의 예외가 발생하고, 이를 모두 한가지 로직으로 처리할 경우
	// try ~ catch, catch, catch...		: 실행코드 내에서 다양한 종류의 예외가 발생하고, 이를 다 따로따로 처리해야 할 경우
	// try ~ finally					: 실행코드를 완료 후, 반드시(무조건) 실행되어야 할 코드가 있는 경우
	// try ~ catch- finally
	// try with resources				: close가 필요한 자원을 사용하는 경우, 절대적으로 자원을 close하는 더 심플한 문법
	// 									  AutoCloseable을 상속한 클래스에 한하여 적용 가능


	public Connection getConnection() throws Exception {
		String url = "jdbc:oracle:thin:@localhost:1521:xe";
		String id="kh";
		String pw="kh";
		Connection con = DriverManager.getConnection(url,id,pw);

		return con;
	}

	public int insert(String name, int kor, int eng, int math) throws Exception {

		try(Connection con = this.getConnection();	
				Statement stat = con.createStatement();	) {

			String sql = "INSERT INTO STUDENTS VALUES(students_seq.nextval,'"+name+"',"+kor+","+eng+","+math+")";
			int result = stat.executeUpdate(sql);	
			con.commit();							
			return result;	
		}
	}

	public List<Student_Dto> select() throws Exception{
		try(Connection con = this.getConnection();
				Statement stat = con.createStatement();){

			String sql = "SELECT * FROM STUDENTS";
			ResultSet rs = stat.executeQuery(sql);

			List<Student_Dto> result = new ArrayList<Student_Dto>();

			while(rs.next()) {
				int id = rs.getInt("ID");
				String name = rs.getString("NAME");
				int kor = rs.getInt("KOR");
				int eng = rs.getInt("ENG");
				int math = rs.getInt("MATH");

				Student_Dto dto = new Student_Dto(id,name,kor,eng,math);
				result.add(dto);
			}
			return result;
		}
	}

	public int update(int id, int kor, int eng, int math) throws Exception {
		try(Connection con = this.getConnection();
				Statement stat = con.createStatement();){

			String sql="UPDATE STUDENTS SET kor="+kor+",ENG = "+eng+",MATH ="+math+" WHERE ID ="+ id +"";
			int result = stat.executeUpdate(sql);

			con.commit();
			con.close();
			return result;
		}
	}

	public boolean isExist(int id) throws Exception {
		try(Connection con = this.getConnection();
				Statement stat = con.createStatement();){

			String sql = "SELECT * FROM STUDENTS WHERE ID ="+id+"";
			ResultSet rs = stat.executeQuery(sql);
			boolean result = rs.next();

			return result;
		}

	}

	public int delete(int id) throws Exception {
		try(Connection con = this.getConnection();
				Statement stat =con.createStatement();){

			String sql = "DELETE FROM STUDENTS WHERE ID ="+ id +"";
			int result = stat.executeUpdate(sql);

			return result;
		}
	}

	public List<Student_Dto> issele(String name) throws Exception {
		try(Connection con = this.getConnection();
				Statement stat = con.createStatement();){

			String sql = "select * from students where name like '%"+name+"%'";
			ResultSet rs = stat.executeQuery(sql);

			List<Student_Dto> result = new ArrayList<Student_Dto>();

			while(rs.next()) {
				int id = rs.getInt("id");
				String nname = rs.getString("name");
				int kor = rs.getInt("kor");
				int eng = rs.getInt("eng");
				int math = rs.getInt("math");

				Student_Dto dto = new Student_Dto(id, nname, kor, eng, math); 

				result.add(dto);		
			}
			return result;
		}
	}


}















